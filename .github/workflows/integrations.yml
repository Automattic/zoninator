name: Run PHPUnit

on:
  # Run on all pushes and on all pull requests.
  # Prevent the "push" build from running when there are only irrelevant changes.
  push:
    paths-ignore:
      - "**.md"
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

jobs:
  test:
    name: WP ${{ matrix.wordpress }} on PHP ${{ matrix.php }}
    # Ubuntu-20.x includes MySQL 8.0, which causes `caching_sha2_password` issues with PHP < 7.4
    # https://www.php.net/manual/en/mysqli.requirements.php
    # TODO: change to ubuntu-latest when we no longer support PHP < 7.4
    runs-on: ubuntu-18.04

    env:
      WP_VERSION: ${{ matrix.wordpress }}

    strategy:
      fail-fast: false
      matrix:
        wordpress: ["5.5", "5.6", "5.7"]
        php: ["5.6", "7.0", "7.1", "7.2", "7.3", "7.4"]
        include:
          - php: "8.0"
            # Ignore platform requirements, so that PHPUnit 7.5 can be installed on PHP 8.0 (and above).
            composer-options: "--ignore-platform-reqs"
            extensions: pcov
            ini-values: pcov.directory=., "pcov.exclude=\"~(vendor|tests)~\""
            coverage: pcov
        exclude:
          - php: "8.0"
            wordpress: "5.5"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # https://make.wordpress.org/hosting/handbook/handbook/server-environment/#php-extensions
          extensions: curl, dom, exif, fileinfo, hash, json, mbstring, mysqli, openssl, pcre, imagick, xml, zip

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: "${{ matrix.composer-options }}"

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Show PHP and PHPUnit version info
        run: |
          php --version
          ./vendor/bin/phpunit --version

      - name: Start MySQL service
        run: sudo /etc/init.d/mysql start

      - name: Install WordPress environment
        run: composer prepare-ci ${{ matrix.wordpress }}

      - name: Run integration tests (single site)
        run: composer test

      - name: Run integration tests (multisite)
        run: composer test-ms
